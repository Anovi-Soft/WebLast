#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnoviSoftSiteFun.Helpers
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BtceTradeHistory")]
	public partial class VisitorsDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPageLoadLog(PageLoadLog instance);
    partial void UpdatePageLoadLog(PageLoadLog instance);
    partial void DeletePageLoadLog(PageLoadLog instance);
    partial void InsertSessionLog(SessionLog instance);
    partial void UpdateSessionLog(SessionLog instance);
    partial void DeleteSessionLog(SessionLog instance);
    #endregion
		
		public VisitorsDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BtceTradeHistoryConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VisitorsDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VisitorsDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VisitorsDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VisitorsDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PageLoadLog> PageLoadLogs
		{
			get
			{
				return this.GetTable<PageLoadLog>();
			}
		}
		
		public System.Data.Linq.Table<SessionLog> SessionLogs
		{
			get
			{
				return this.GetTable<SessionLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageLoadLog")]
	public partial class PageLoadLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Url;
		
		private string _UserId;
		
		private string _Ip4;
		
		private System.DateTime _LoadDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnIp4Changing(string value);
    partial void OnIp4Changed();
    partial void OnLoadDateTimeChanging(System.DateTime value);
    partial void OnLoadDateTimeChanged();
    #endregion
		
		public PageLoadLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip4", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Ip4
		{
			get
			{
				return this._Ip4;
			}
			set
			{
				if ((this._Ip4 != value))
				{
					this.OnIp4Changing(value);
					this.SendPropertyChanging();
					this._Ip4 = value;
					this.SendPropertyChanged("Ip4");
					this.OnIp4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LoadDateTime
		{
			get
			{
				return this._LoadDateTime;
			}
			set
			{
				if ((this._LoadDateTime != value))
				{
					this.OnLoadDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LoadDateTime = value;
					this.SendPropertyChanged("LoadDateTime");
					this.OnLoadDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SessionLog")]
	public partial class SessionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _Ip4;
		
		private System.DateTime _OpenDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnIp4Changing(string value);
    partial void OnIp4Changed();
    partial void OnOpenDateTimeChanging(System.DateTime value);
    partial void OnOpenDateTimeChanged();
    #endregion
		
		public SessionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip4", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string Ip4
		{
			get
			{
				return this._Ip4;
			}
			set
			{
				if ((this._Ip4 != value))
				{
					this.OnIp4Changing(value);
					this.SendPropertyChanging();
					this._Ip4 = value;
					this.SendPropertyChanged("Ip4");
					this.OnIp4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime OpenDateTime
		{
			get
			{
				return this._OpenDateTime;
			}
			set
			{
				if ((this._OpenDateTime != value))
				{
					this.OnOpenDateTimeChanging(value);
					this.SendPropertyChanging();
					this._OpenDateTime = value;
					this.SendPropertyChanged("OpenDateTime");
					this.OnOpenDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
